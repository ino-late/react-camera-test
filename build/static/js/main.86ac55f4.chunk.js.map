{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","photo","setPhoto","className","src","alt","onClick","onTakePhoto","dataUri","onCameraError","error","alert","isSilentMode","isImageMirror","idealResolution","width","height","idealFacingMode","FACING_MODES","ENVIRONMENT","imageType","IMAGE_TYPES","PNG","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAwCeA,MApCf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,KAcb,OACE,qBAAKC,UAAU,MAAf,SACGF,EACC,qCACE,qBAAKG,IAAKH,EAAOI,IAAI,WACrB,wBAAQC,QATI,WAClBJ,EAAS,KAQH,mCAGF,cAAC,IAAD,CACEK,YArBgB,SAAAC,GACtBN,EAASM,IAqBHC,cAlBkB,SAAAC,GACxBC,MAAMD,IAkBAE,cAAc,EACdC,eAAe,EACfC,gBAAiB,CAAEC,MAAO,IAAKC,OAAQ,KACvCC,gBAAiBC,eAAaC,YAC9BC,UAAWC,cAAYC,SCrBlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.86ac55f4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Camera, { FACING_MODES, IMAGE_TYPES } from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\n\nfunction App() {\n  const [photo, setPhoto] = useState('');\n  const handleTakePhoto = dataUri => {\n    setPhoto(dataUri);\n  };\n\n  const handleCameraError = error => {\n    alert(error);\n  };\n\n  const handleClick = () => {\n    setPhoto('');\n  };\n\n  return (\n    <div className='App'>\n      {photo ? (\n        <>\n          <img src={photo} alt='camera' />\n          <button onClick={handleClick}>クリア</button>\n        </>\n      ) : (\n        <Camera\n          onTakePhoto={handleTakePhoto}\n          onCameraError={handleCameraError}\n          isSilentMode={true} // シャッター音OFF\n          isImageMirror={false} // 鏡像OFF\n          idealResolution={{ width: 960, height: 540 }}\n          idealFacingMode={FACING_MODES.ENVIRONMENT} // 背面カメラ指定\n          imageType={IMAGE_TYPES.PNG}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}